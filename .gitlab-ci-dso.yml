# .gitlab-ci.yml — Build d’image Docker via Kaniko (sans pin torch)

include:
  - project: $CATALOG_PATH
    file: vault-ci.yml
    ref: main
  - project: $CATALOG_PATH
    file: kaniko-ci.yml
    ref: main

default:
  image: alpine:latest

variables:
  # Tags & registre
  TAG: "${CI_COMMIT_REF_SLUG}"
  REGISTRY_URL: "${REGISTRY_HOST}/${PROJECT_PATH}"

  # Build args Docker
  PYTHON_VERSION: "3.12"
  TORCH_CUDA_ARCH_LIST: "9.0"   # ignoré si wheels précompilées (OK)

  # <<< Ressources pod CI (évite TerminationByKubelet sous pression mémoire) >>>
  # Pic observé ~ 13Gi → réserve et limite au-dessus.
  KUBERNETES_MEMORY_REQUEST: "10Gi"
  KUBERNETES_MEMORY_LIMIT:   "16Gi"
  KUBERNETES_CPU_REQUEST:    "2"
  KUBERNETES_CPU_LIMIT:      "4"

stages:
  - read-secret
  - docker-build

read_secret:
  stage: read-secret
  extends:
    - .vault:read_secret

docker-build-app:
  stage: docker-build
  extends:
    - .kaniko:build-push
  variables:
    WORKING_DIR: "."
    DOCKERFILE: "Dockerfile"
    IMAGE_NAMES: >
      ${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}
      ${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}
    EXTRA_BUILD_ARGS: >
      --build-arg PYTHON_VERSION=${PYTHON_VERSION}
      --build-arg TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
    # Flags Kaniko "low-mem" + cache
    KANIKO_ARGS: >
      --snapshotMode=redo
      --cache=true
      --cache-copy-layers
      --verbosity=info
