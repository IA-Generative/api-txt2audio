# -- Provide a name in place of the default application name.
nameOverride: ""
# -- String to fully override the default application name.
fullnameOverride: ""


# Global configuration.
global:
  # -- Map of environment variables to inject into backend and frontend containers.
  # @section -- Global
  env:
    TZ: "Europe/Paris"
    HF_HUB_DISABLE_TELEMETRY: "1"
  # -- Map of environment variables to inject into backend and frontend containers.
  # @section -- Global
  secrets: {}

# App configuration.
app:
  # -- The number of application controller pods to run.
  # @section -- App
  replicaCount: 1
  ## App image.
  image:
    # -- Repository to use for the app.
    # @section -- App
    repository: "harbor.sdid.cpin.numerique-interieur.com/stt/api-audio2txt"
    # -- Image pull policy for the app.
    # @section -- App
    pullPolicy: "Always"  #IfNotPresent"
    # -- Image pull policy for the app.
    # @section -- App
    pullSecrets:
      - name: registry-pull-secret
    # -- Tag to use for the app.
    # @section -- App
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main" #develop"
  ## Ingress configuration.
  ingress:
    # -- Whether or not ingress should be enabled.
    # @section -- App
    enabled: true
    # -- Defines which ingress controller will implement the resource.
    # @section -- App
    className: "nginx"
    # -- Additional ingress annotations.
    # @section -- App
    annotations:
      nginx.ingress.kubernetes.io/enable-modsecurity: "false"
      nginx.ingress.kubernetes.io/enable-owasp-modsecurity-crs: "false"
      nginx.ingress.kubernetes.io/proxy-body-size: "25m"
    # -- Additional ingress labels.
    # @section -- App
    labels: {}
    # -- The list of hosts to be covered by ingress record.
    # @section -- App
    hosts:
    - "stt.sdid-app-hp.cpin.numerique-interieur.com"
#        path: "/"
    # -- Enable TLS configuration.
    # @section -- App
    tls: []
  # -- Annotations for the app deployed pods.
  # @section -- App
  podAnnotations: {}
  # -- Labels for the app deployed pods.
  # @section -- App
  podLabels: {}
  # -- Toggle and define pod-level security context.
  # @section -- App
  podSecurityContext: {}
    # runAsNonRoot: true
    # fsGroup: 10001
    # seccompProfile:
    #   type: "RuntimeDefault"
  serviceAccount:
    # -- Whether to create a dedicated service account for the application.
    # @section -- App
    create: false
    # -- Name of the service account to use. If not set and create is true, a name is generated using the release name.
    # @section -- App
    name: ""
  # -- Init containers to add to the app pod.
  # @section -- App
  initContainers: []
  # - name: wait-for-keycloak
  #   image: docker.io/curlimages/curl:latest
  #   command:
  #   - "/bin/sh"
  #   - "-c"
  #   args:
  #   - "while [ $(curl -sw '%{http_code}' http://webapp.svc.cluster.local -o /dev/null) -ne 200 ]; do sleep 5; echo 'Waiting for the webapp...'; done"
  #   volumeMounts:
  #   - mountPath: /custom-volume
  #     name: custom-volume
  container:
    # -- app container port.
    # @section -- App
    port: 8080
    # -- app container command.
    # @section -- App
    command: []
    # -- app container command args.
    # @section -- App
    args: []
    # -- Toggle and define container-level security context.
    # @section -- App
    securityContext: {}
      # runAsUser: 10001
      # allowPrivilegeEscalation: false
      # capabilities:
      #   drop: ["ALL"]
      # runAsNonRoot: true
      # seccompProfile:
      #   type: RuntimeDefault
  # -- Extra containers to add to the app pod as sidecars.
  # @section -- App
  extraContainers: []
  # - name: fluentd
  #   image: "fluentd"
  #   volumeMounts:
  #     - mountPath: /my-volume/config
  #       name: config
  # -- app container env variables loaded from configmap or secret reference.
  # @section -- App
  envFrom:
    - secretRef:
        name: auth-tokens-api-audio2txt
  # - configMapRef:
  #     name: my-config
  # - secretRef:
  #     name: my-secret
  # -- app container env variables, it will be injected into a configmap and loaded into the container as a volume.
  # @section -- App
  # -- app container env variables, it will be injected into a configmap and loaded into the container.
  # @section -- App
  env:
    API_TOKENS: "*"
    BATCH_SIZE: "12"
    MAX_WAIT_MS: "12"
    SENTENCE_MAX_QUEUE: "48"
    WORD_MAX_QUEUE: "48"
    SENTENCE_POLICY: "reject_new"
    WORD_POLICY: "drop_oldest"
  # -- app container env secrets, it will be injected into a secret and loaded into the container.
  # @section -- App
  secrets: {}
  # -- app container healthcheck endpoint.
  # @section -- App
  healthcheckPath: "/healthz" #"/"
  ## Deployment strategy for CPN app deployment.
  strategy:
    # -- Strategy type used to replace old Pods by new ones, can be "Recreate" or "RollingUpdate".
    # @section -- App
    type: "RollingUpdate"
  ## Startup probe for app.
  startupProbe:
    # -- Whether or not enable the probe.
    # @section -- App
    enabled: true
    # -- Number of seconds after the container has started before probe is initiated.
    # @section -- App
    initialDelaySeconds: 0
    # -- Minimum consecutive successes for the probe to be considered successful after having failed.
    # @section -- App
    successThreshold: 1
    # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
    # @section -- App
    failureThreshold: 10
    # -- How often (in seconds) to perform the probe.
    # @section -- App
    periodSeconds: 10
    # -- Number of seconds after which the probe times out.
    # @section -- App
    timeoutSeconds: 5
  ## Readiness probe for app.
  readinessProbe:
    # -- Whether or not enable the probe.
    # @section -- App
    enabled: true
    # -- Number of seconds after the container has started before probe is initiated.
    # @section -- App
    initialDelaySeconds: 15
    # -- Minimum consecutive successes for the probe to be considered successful after having failed.
    # @section -- App
    successThreshold: 2
    # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
    # @section -- App
    failureThreshold: 2
    # -- How often (in seconds) to perform the probe.
    # @section -- App
    periodSeconds: 10
    # -- Number of seconds after which the probe times out.
    # @section -- App
    timeoutSeconds: 5
  ## Liveness probe for app.
  livenessProbe:
    # -- Whether or not enable the probe.
    # @section -- App
    enabled: true
    # -- Whether or not enable the probe.
    # @section -- App
    initialDelaySeconds: 30
    # -- Number of seconds after the container has started before probe is initiated.
    # @section -- App
    successThreshold: 1
    # -- Minimum consecutive successes for the probe to be considered successful after having failed.
    # @section -- App
    failureThreshold: 3
    # -- Minimum consecutive failures for the probe to be considered failed after having succeeded.
    # @section -- App
    periodSeconds: 30
    # -- How often (in seconds) to perform the probe.
    # @section -- App
    timeoutSeconds: 5
  # -- Host aliases that will be injected at pod-level into /etc/hosts.
  # @section -- App
  hostAliases: []
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"
  # - ip: "10.1.2.3"
  #   hostnames:
  #   - "foo.remote"
  #   - "bar.remote"
  # -- List of extra volumes to add.
  # @section -- App
  extraVolumes: []
  # - name: extra-vol
  #   path: /host/path
  #   type: hostPath
  # - name: extra-vol-cm
  #   type: configMap
  # -- List of extra mounts to add (normally used with extraVolumes).
  # @section -- App
  extraVolumeMounts: []
  # - name: extra-vol
  #   mountPath: /volume/path
  # - name: extra-vol-cm
  #   mountPath: /volume/cm/path
  service:
    # -- app service type.
    # @section -- App
    type: "ClusterIP"
    # -- app service port.
    # @section -- App
    port: 80
  resources:
    requests:
      # -- Memory request for the app.
      # @section -- App
      memory: "1Gi"
      # -- CPU request for the app.
      # @section -- App
      cpu: "100m"
      # -- GPU request for the app.
      nvidia.com/mig-1g.10gb: 1
    limits:
      # -- Memory limit for the app.
      # @section -- App
      memory: "2Gi"
      # -- CPU limit for the app.
      # @section -- App
      cpu: "1000m"
      # -- GPU limit for the app.
      nvidia.com/mig-1g.10gb: 1
  autoscaling:
    # -- Enable Horizontal Pod Autoscaler ([HPA]) for the app.
    # @section -- App
    enabled: false
    # -- Minimum number of replicas for the app [HPA].
    # @section -- App
    minReplicas: 1
    # -- Maximum number of replicas for the app [HPA].
    # @section -- App
    maxReplicas: 2
    # -- Average CPU utilization percentage for the app [HPA].
    # @section -- App
    targetCPUUtilizationPercentage: 80
    # -- Average memory utilization percentage for the app [HPA].
    # @section -- App
    targetMemoryUtilizationPercentage: 80
  # -- Default node selector for app.
  # @section -- App
  nodeSelector: {}
  # -- Default tolerations for app.
  # @section -- App
#  tolerations: []
  tolerations:
    - key: gpu
      operator: Equal
      value: "true"
      effect: NoExecute
  # -- Default affinity for app.
  # @section -- App
  affinity: {}

# -- Add extra specs dynamically to this chart.
# @section -- General
extraObjects:
 - apiVersion: secrets.hashicorp.com/v1beta1
   kind: VaultStaticSecret
   metadata:
     name: auth-tokens-api-audio2txt
   spec:
     mount: "stt"
     vaultAuthRef: "vault-auth"
     path: "prod/auth-tokens-api-audio2txt"
     type: "kv-v2"
     destination:
       create: true
       name: auth-tokens-api-audio2txt
       type: "Opaque"
